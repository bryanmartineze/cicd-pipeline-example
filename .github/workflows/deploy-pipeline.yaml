permissions:
  id-token: write
  #Was changed from read to write to create a checkout -b to gh-pages
  contents: write

name: Deploy train schedule
on: 

  workflow_dispatch:

jobs:

  # build-and-test-with-gradle:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout project sources
  #       uses: actions/checkout@v3
  #     - name: Set up Java 8
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '8'
  #         distribution: 'adopt'
  #     - name: Check Java version
  #       run: java -version
  #     - name: Setup Gradle and build
  #       run: |
  #           ./gradlew build
  #     - name: Archive artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: zipped-bundle
  #         path: dist/trainSchedule.zip
    
          
  # upload-artifact-to-s3:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test-with-gradle
  #   steps:
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: zipped-bundle
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gh_actions_role_example_pipeline
  #         aws-region: us-east-1
  #     - name: Upload to S3
  #       run: aws s3 cp trainSchedule.zip s3://cicd-pipeline-example-artifacts/${{ github.repository }}/trainSchedule.zip
       
  # push-to-dockerhub:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test-with-gradle
  #   steps:
  #     - name: Checkout project sources
  #       uses: actions/checkout@v3
  #     - name: docker login
  #       env: 
  #         DOCKER_USER: ${{ secrets.DOCKER_USER }}
  #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #       run: |
  #         docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
  #     - name: build docker image
  #       run: docker build -t bryanmartineze/train-schedule:latest .
  #     - name: docker push
  #       run: docker push ${{ secrets.DOCKER_USER }}/train-schedule:latest
       
  provision-test-infrastructure-with-terraform:
    runs-on: ubuntu-latest
    # needs: push-to-dockerhub
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        working-directory: terraform
        id: init
        run: terraform init
      - name: Terraform Lint
        working-directory: terraform
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Validate
        working-directory: terraform
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        working-directory: terraform
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - name: Terraform Plan Status
        working-directory: terraform
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        id: apply
        working-directory: terraform
        run: terraform apply -auto-approve
      - name: retrieve docker_ip from terraform output
        id: retrieve_ip
        working-directory: terraform
        run: |
          echo "::set-output name=ip::$(terraform output -raw docker_ip)"
      - name: retrieve ssh key from terraform output
        working-directory: terraform
        run: |
          terraform output -raw docker_key > /tmp/docker_key.pem && chmod 600 /tmp/docker_key.pem
      - name: upload ssh key
        uses: actions/upload-artifact@v2
        with:
          name: ssh-key
          path: /tmp/docker_key.pem

  provision-docker-with-ansible:
    runs-on: ubuntu-latest
    needs: provision-test-infrastructure-with-terraform
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install ansible
      - name: Download ssh key artifact
        uses: actions/download-artifact@v2
        with:
          name: ssh-key
      - name: Add hosts to inventory
        run: |
          echo "[servers]" > /tmp/inventory.ini
          echo "${{ needs.provision-test-infrastructure-with-terraform.outputs.ip }}" >> /tmp/inventory.ini
      - name: wait till the ec2 instance is live
        run: |
          sleep 120
      - name: Run ansible playbook
        working-directory: ansible
        run: |
          ansible-playbook docker-test-playbook.yml -u ec2-user --private-key=/tmp/docker_key.pem -i /tmp/inventory.ini -vvv